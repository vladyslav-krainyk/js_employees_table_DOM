{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","tBody","tHead","minAge","maxAge","minNameLength","insertAdjacentHTML","pushNotification","title","description","type","notification","createElement","header","content","setAttribute","append","textContent","setTimeout","remove","firtLetterCapitalize","str","result","split","map","word","toUpperCase","slice","join","form","addEventListener","e","preventDefault","newEmployee","Object","fromEntries","FormData","name","length","Number","age","salary","newRow","innerHTML","position","office","toLocaleString","reset","modificator","rows","Array","from","querySelectorAll","normalizeCurreny","value","replace","sortParam","target","closest","cellIndex","sort","a","b","aItem","children","trim","bItem","localeCompare","reverse","forEach","row","classList","toggle","cell","cellValue","input","style","getBoundingClientRect","width","select","focus","replaceInputValue","hasCheckNumber","hasCheckString","includes","press","key","activeElement","blur"],"mappings":"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","file":"main.928b29ee.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst tBody = table.querySelector('tbody');\nconst tHead = table.querySelector('thead');\nconst minAge = 18;\nconst maxAge = 90;\nconst minNameLength = 4;\n\nbody.insertAdjacentHTML('beforeend', `\n  <form\n    action=\"#\"\n    method=\"GET\"\n    class=\"new-employee-form\"\n  >\n    <label>Name:\n      <input\n        name=\"name\"\n        type=\"text\"\n        data-qa=\"name\"\n        required\n      >\n    </label>\n    <label>Position:\n      <input\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n        required\n      >\n    </label>\n    <label>Office:\n      <select\n        name=\"office\"\n        data-qa=\"office\"\n      >\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input\n        name=\"age\"\n        type=\"number\"\n        min=0\n        data-qa=\"age\"\n        required\n      >\n    </label>\n    <label>Salary:\n      <span>$\n        <input\n          name=\"salary\"\n          type=\"number\"\n          min=0\n          data-qa=\"salary\"\n          required\n        >\n      </span>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n  const header = document.createElement('h2');\n  const content = document.createElement('p');\n\n  notification.setAttribute('class', `notification ${type}`);\n  notification.setAttribute('data-qa', 'notification');\n  notification.append(header, content);\n\n  header.setAttribute('class', 'title');\n  header.textContent = title;\n\n  content.textContent = description;\n\n  document.body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nfunction firtLetterCapitalize(str) {\n  const result = str.split(' ').map(word => {\n    return word[0].toUpperCase() + word.slice(1);\n  }).join(' ');\n\n  return result;\n};\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const newEmployee = Object.fromEntries(new FormData(form));\n\n  if (newEmployee.name.length < minNameLength) {\n    pushNotification('Error',\n      'Name is too short',\n      'error');\n\n    return;\n  }\n\n  if (Number(newEmployee.age) < minAge) {\n    pushNotification('Error',\n      'You are too young!!!',\n      'error');\n\n    return;\n  }\n\n  if (Number(newEmployee.age) > maxAge) {\n    pushNotification('Error',\n      'You are too old!!!',\n      'error');\n\n    return;\n  }\n\n  if (newEmployee.salary.length === 0) {\n    pushNotification('Error',\n      'Invalid salary value',\n      'error');\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>\n      ${firtLetterCapitalize(newEmployee.name)}\n    </td>\n    <td>\n      ${firtLetterCapitalize(newEmployee.position)}\n    </td>\n    <td>\n      ${newEmployee.office}\n    </td>\n    <td>\n      ${newEmployee.age}\n    </td>\n    <td>\n      $${(+newEmployee.salary).toLocaleString('en')}\n    </td>\n  `;\n\n  pushNotification('Success',\n    'Employee has been successfully added',\n    'success'\n  );\n\n  tBody.append(newRow);\n  form.reset();\n});\n\nconst rows = Array.from(tBody.querySelectorAll('tr'));\n\nconst normalizeCurreny = value => {\n  return +value.replace(/\\D/g, '');\n};\n\nlet modificator;\n\ntHead.addEventListener('click', e => {\n  const sortParam = e.target.closest('th').cellIndex;\n\n  const sort = rows.sort((a, b) => {\n    const aItem = a.children[sortParam].textContent.trim();\n    const bItem = b.children[sortParam].textContent.trim();\n\n    switch (sortParam) {\n      case 3:\n        return +aItem - +bItem;\n\n      case 4:\n        return normalizeCurreny(aItem) - normalizeCurreny(bItem);\n\n      default:\n        return aItem.localeCompare(bItem);\n    }\n  });\n\n  if (modificator) {\n    tBody.append(...sort.reverse());\n    modificator = false;\n  } else {\n    tBody.append(...sort);\n    modificator = true;\n  }\n});\n\ntBody.addEventListener('click', e => {\n  Array.from(tBody.rows).forEach(row => {\n    row.classList.toggle('active',\n      row === e.target.closest('tr'));\n  });\n});\n\ntBody.addEventListener('dblclick', e => {\n  const cell = e.target.closest('td');\n  const cellIndex = cell.cellIndex;\n\n  if (!cell) {\n    return;\n  }\n\n  let cellValue = cell.textContent;\n\n  cell.textContent = '';\n\n  const input = document.createElement('input');\n\n  input.setAttribute('class', 'cell-input');\n  input.style = `width: ${cell.getBoundingClientRect().width / 2}px`;\n\n  const select = document.createElement('select');\n\n  select.innerHTML = `\n    <select\n      name=\"office\"\n    >\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  `;\n\n  cell.innerHTML = '';\n\n  if (cellIndex === 2) {\n    cell.append(select);\n  } else {\n    cell.append(input);\n  }\n\n  input.focus();\n\n  const replaceInputValue = () => {\n    const hasCheckNumber = input.value === input.value.replace(/\\D/g, '');\n\n    const hasCheckString = input.value === input.value\n      .replace(/[^a-zA-Z]+/g, ' ');\n\n    if ([0, 1].includes(cellIndex) && hasCheckString) {\n      cellValue = firtLetterCapitalize(input.value.replace(/[^a-zA-Z]+/g, ' '));\n\n      pushNotification('Success',\n        'Employee\\'s data has been replaced',\n        'success');\n    } else if ([0, 1].includes(cellIndex) && !hasCheckString) {\n      pushNotification('Error',\n        `Invalid value!!!\n          You must only use letters. For ex. [a-z/A-Z].`,\n        'error');\n    }\n\n    if (cellIndex === 2) {\n      cellValue = select.value;\n    }\n\n    if (cellIndex === 3 && hasCheckNumber) {\n      if (+input.value >= minAge && +input.value <= maxAge) {\n        cellValue = input.value;\n\n        pushNotification('Success',\n          'Employee\\'s data has been replaced',\n          'success');\n      } else {\n        pushNotification('Error',\n          `Invalid value!!!\n            You must be between 18 and 90`,\n          'error');\n      }\n    } else if (cellIndex === 3 && !hasCheckNumber) {\n      pushNotification('Error',\n        `Invalid value!!!\n          You must only use numbers.`,\n        'error');\n    }\n\n    if (cellIndex === 4 && hasCheckNumber) {\n      if (+input.value > 0) {\n        cellValue = `$${(+input.value).toLocaleString('en')}`;\n\n        pushNotification('Success',\n          'Employee\\'s data has been replaced',\n          'success');\n      }\n    } else if (cellIndex === 4 && !hasCheckNumber) {\n      pushNotification('Error',\n        `Invalid value!!!\n          You must only use numbers and salary must be positive number.`,\n        'error');\n    }\n\n    cell.textContent = cellValue;\n  };\n\n  input.addEventListener('blur', () => {\n    replaceInputValue();\n  });\n\n  input.addEventListener('keydown', (press) => {\n    if (press.key !== 'Enter') {\n      return;\n    }\n\n    replaceInputValue();\n\n    document.activeElement.blur();\n  });\n\n  select.addEventListener('blur', () => {\n    replaceInputValue();\n\n    pushNotification('Success',\n      'Employee\\'s data has been replaced',\n      'success');\n  });\n\n  select.addEventListener('keydown', (press) => {\n    if (press.key !== 'Enter') {\n      return;\n    }\n\n    replaceInputValue();\n\n    pushNotification('Success',\n      'Employee\\'s data has been replaced',\n      'success');\n\n    document.activeElement.blur();\n  });\n});\n"]}